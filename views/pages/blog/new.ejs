<%- contentFor('head') %>
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prismjs/1.29.0/themes/prism-okaidia.min.css">
    <link rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/prismjs/1.29.0/plugins/toolbar/prism-toolbar.min.css">

    <%- contentFor('body') %>
        <div class="container main-content">
            <div class="row">
                <div class="col-lg-10 mx-auto">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h1><i class="fas fa-edit me-2"></i>Create New Blog Post</h1>
                        <a href="/blog" class="btn btn-outline-primary">
                            <i class="fas fa-arrow-left me-2"></i>Back to Blog
                        </a>
                    </div>

                    <div class="blog-form-container">
                        <form action="/blog/new" method="POST" enctype="multipart/form-data" id="blog-form">
                            <div class="mb-3">
                                <label for="title" class="form-label">Title</label>
                                <input type="text" class="form-control" id="title" name="title" required>
                            </div>

                            <div class="mb-3">
                                <label for="editor" class="form-label">Content</label>
                                <div id="editor" style="height: 300px"></div>
                                <input type="hidden" name="content" id="content-input">
                            </div>

                            <div class="mb-3">
                                <label for="tags" class="form-label">Tags (comma-separated)</label>
                                <input type="text" class="form-control" id="tags" name="tags"
                                    placeholder="e.g. JavaScript, Web Development, React">
                            </div>

                            <div class="mb-4">
                                <label for="image" class="form-label">Featured Image</label>
                                <div class="file-upload-wrapper">
                                    <input type="file" id="image" name="image" class="file-upload-input"
                                        accept="image/*">
                                    <div class="file-upload-button">
                                        <i class="fas fa-cloud-upload-alt me-2"></i>
                                        <span id="file-chosen">Choose an image</span>
                                    </div>
                                </div>
                            </div>

                            <div class="d-grid">
                                <button type="submit" class="btn btn-primary" id="publish-btn">
                                    <i class="fas fa-paper-plane me-2"></i>Publish Post
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Code Insert Modal -->
        <div class="modal fade" id="codeModal" tabindex="-1" aria-labelledby="codeModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="codeModalLabel">Insert Code Block</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="code-language" class="form-label">Language</label>
                            <select class="form-select" id="code-language">
                                <option value="markup">HTML/XML</option>
                                <option value="css">CSS</option>
                                <option value="javascript" selected>JavaScript</option>
                                <option value="typescript">TypeScript</option>
                                <option value="python">Python</option>
                                <option value="java">Java</option>
                                <option value="php">PHP</option>
                                <option value="csharp">C#</option>
                                <option value="cpp">C++</option>
                                <option value="sql">SQL</option>
                                <option value="bash">Bash</option>
                                <option value="json">JSON</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="code-content" class="form-label">Code</label>
                            <textarea class="form-control font-monospace" id="code-content" rows="10"
                                placeholder="Paste your code here..."></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" id="insert-code-btn">Insert Code</button>
                    </div>
                </div>
            </div>
        </div>

        <%- contentFor('scripts') %>
            <script src="https://cdn.quilljs.com/1.3.6/quill.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/prismjs/1.29.0/prism.min.js"></script>
            <script
                src="https://cdnjs.cloudflare.com/ajax/libs/prismjs/1.29.0/plugins/toolbar/prism-toolbar.min.js"></script>
            <script
                src="https://cdnjs.cloudflare.com/ajax/libs/prismjs/1.29.0/plugins/copy-to-clipboard/prism-copy-to-clipboard.min.js"></script>
            <script
                src="https://cdnjs.cloudflare.com/ajax/libs/prismjs/1.29.0/components/prism-javascript.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/prismjs/1.29.0/components/prism-css.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/prismjs/1.29.0/components/prism-markup.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/prismjs/1.29.0/components/prism-python.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/prismjs/1.29.0/components/prism-java.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/prismjs/1.29.0/components/prism-php.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/prismjs/1.29.0/components/prism-sql.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/prismjs/1.29.0/components/prism-bash.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/prismjs/1.29.0/components/prism-json.min.js"></script>

            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    // Initialize Quill editor
                    const quill = new Quill('#editor', {
                        theme: 'snow',
                        modules: {
                            toolbar: [
                                [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                                ['bold', 'italic', 'underline', 'strike'],
                                ['blockquote', 'code-block'],
                                [{ 'list': 'ordered' }, { 'list': 'bullet' }],
                                [{ 'script': 'sub' }, { 'script': 'super' }],
                                [{ 'indent': '-1' }, { 'indent': '+1' }],
                                [{ 'color': [] }, { 'background': [] }],
                                [{ 'align': [] }],
                                ['link', 'image'],
                                ['clean']
                            ]
                        },
                        placeholder: 'Write your blog post content here...'
                    });

                    // File upload preview
                    const fileInput = document.getElementById('image');
                    const fileChosen = document.getElementById('file-chosen');

                    fileInput.addEventListener('change', function () {
                        if (this.files.length > 0) {
                            fileChosen.textContent = this.files[0].name;
                        } else {
                            fileChosen.textContent = 'Choose an image';
                        }
                    });

                    // Form submission
                    const form = document.getElementById('blog-form');
                    const contentInput = document.getElementById('content-input');

                    form.addEventListener('submit', function (e) {
                        // Get the HTML content from Quill editor
                        const content = quill.root.innerHTML;

                        // Set the content to the hidden input
                        contentInput.value = content;
                    });

                    // Content preview
                    const contentPreview = document.getElementById('content-preview');
                    const previewBtn = document.getElementById('preview-btn');

                    previewBtn.addEventListener('click', function () {
                        contentPreview.innerHTML = contentInput.value;
                        // Highlight code blocks in the preview
                        Prism.highlightAllUnder(contentPreview);
                    });

                    // Clear form
                    const clearFormBtn = document.getElementById('clear-form');
                    const titleInput = document.getElementById('title');
                    const tagsInput = document.getElementById('tags');

                    clearFormBtn.addEventListener('click', function () {
                        if (confirm('Are you sure you want to clear all form data?')) {
                            titleInput.value = '';
                            contentInput.value = '';
                            tagsInput.value = '';
                            fileInput.value = '';
                            fileChosen.textContent = 'Choose an image';
                            contentPreview.innerHTML = '<p class="text-muted text-center py-5">Your content preview will appear here.</p>';
                        }
                    });

                    // Code block insertion
                    const insertCodeBtn = document.getElementById('insert-code-btn');
                    const codeModal = new bootstrap.Modal(document.getElementById('codeModal'));
                    const codeLanguage = document.getElementById('code-language');
                    const codeContent = document.getElementById('code-content');

                    // Open modal when clicking the insert code button
                    document.querySelector('.insert-code-btn').addEventListener('click', function () {
                        codeModal.show();
                    });

                    // Insert code when clicking the insert button in the modal
                    insertCodeBtn.addEventListener('click', function () {
                        const lang = codeLanguage.value;
                        const code = codeContent.value;

                        if (code.trim() === '') {
                            alert('Please enter some code to insert.');
                            return;
                        }

                        // Create code block HTML
                        const codeBlock = `<pre><code class="language-${lang}">${escapeHtml(code)}</code></pre>`;

                        // Insert at cursor position or append to the end
                        insertAtCursor(contentInput, codeBlock);

                        // Clear the code textarea
                        codeContent.value = '';

                        // Close the modal
                        codeModal.hide();
                    });

                    // Helper function to escape HTML
                    function escapeHtml(text) {
                        return text
                            .replace(/&/g, "&amp;")
                            .replace(/</g, "&lt;")
                            .replace(/>/g, "&gt;")
                            .replace(/"/g, "&quot;")
                            .replace(/'/g, "&#039;");
                    }

                    // Helper function to insert text at cursor position
                    function insertAtCursor(textarea, text) {
                        const startPos = textarea.selectionStart;
                        const endPos = textarea.selectionEnd;
                        const beforeText = textarea.value.substring(0, startPos);
                        const afterText = textarea.value.substring(endPos);

                        textarea.value = beforeText + text + afterText;

                        // Set cursor position after the inserted text
                        const newPos = startPos + text.length;
                        textarea.selectionStart = newPos;
                        textarea.selectionEnd = newPos;

                        // Focus back on textarea
                        textarea.focus();
                    }
                });
            </script>